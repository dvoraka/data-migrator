plugins {
    id 'org.springframework.boot' version '1.5.3.RELEASE'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    apply plugin: 'jacoco'
    apply plugin: 'idea'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    version = '0.1-SNAPSHOT'

    sourceSets {
        integrationTest {
            groovy {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDir file('src/integration-test/groovy')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }

    configurations {
        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
        }
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter')
    }

    springBoot {
        mainClass = 'dvoraka.datamigrator.core.Application'
    }

    test {
        testLogging {
            exceptionFormat = 'full'
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:all"
    }

    checkstyle {
        toolVersion = '7.3'
        sourceSets = [sourceSets.main]

        ignoreFailures = false
    }

    findbugs {
        toolVersion = '3.0.1'
        reportLevel = 'medium'
        sourceSets = [sourceSets.main]

        ignoreFailures = false
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    pmd {
        toolVersion = '5.5.2'
        sourceSets = [sourceSets.main]

        ignoreFailures = false
    }

    jacoco {
        toolVersion = '0.7.8'
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '3.5'
    }

    task integrationTest(type: Test) {
        testClassesDir = sourceSets.integrationTest.output.classesDir
        classpath = sourceSets.integrationTest.runtimeClasspath
    }

    check.dependsOn integrationTest
    check.dependsOn jacocoTestReport
}
